class Solution {
    public int[] asteroidCollision(int[] asteroids) {
        Stack<Integer> stk = new Stack<Integer>();
        stk.add(asteroids[0]);
        boolean flag = false;
        for(int i=1; i<asteroids.length; i++){
            if (!stk.isEmpty() && asteroids[i] < 0 && stk.peek() >0 ){
                while (!stk.isEmpty() && stk.peek() >0){
                    if (asteroids[i]*-1 > stk.peek()){
                        stk.pop();
                    } else if (asteroids[i]*-1 == stk.peek()){
                        stk.pop();
                        flag = true;
                        break;
                    }else{
                        break;
                    }
                }
                if ((stk.isEmpty() && !flag) || (!stk.isEmpty() &&stk.peek() < 0 && !flag))stk.add(asteroids[i]);
                flag = false;
            } else {
                stk.add(asteroids[i]);
            }
        }
        int[] ans = new int[stk.size()];
        for (int i=ans.length-1;i>=0; i--){
            ans[i] = stk.pop();
        }
        return ans;
    }
}
